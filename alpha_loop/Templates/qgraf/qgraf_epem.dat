
output = 'output.py';
style = './orientedGraphPython.sty';
model = './SM.dat';

in = eplus[p1], eminus[p2]; 
out = eplus[p1], eminus[p2];

loops = %(n_loops)s;
loop_momentum = k;

options = onshell, notadpole, nosnail;

* final states
%(final_states)s

* coupling order
%(coupling_order)s

* exactly 2 photons
true=iprop[photon,2,2];

* process: 
*   X1 X2 ... XN -> Y1 ... YN
* corresponds to
*   -1 -3 ... -(2N-1) -> -2 ... -2N
* to forbid crossings we can use either
*  true=elink[-1,-3,excl,1,1];
*  true=elink[-2,-4,excl,1,1];
* or (see manual of version 3.4)
true=plink[-1,-3];
true=plink[-2,-4];


* Vetos
%(vetos)s

