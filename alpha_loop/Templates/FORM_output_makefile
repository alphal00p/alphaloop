include ../Source/make_opts

ifeq ($(origin GCC),undefined)
GPP=g++
endif
LIBBPATH=../lib

OPTIMIZATION_LVL = 3
OPTIMIZATION_LVL_f128 = 0

include makefile_user_opts.inc

MPFR_SOURCES = $(wildcard *_mpfr.c)
ifeq ($(MPFR_SOURCES),)
	ARB_PREC := YES
endif

ifdef ARB_PREC
	EXTRA_ARGS=-lmpfr -lgmp -lmpc $(USER_OPTS_ARB_PREC)
else
	EXTRA_ARGS= $(USER_OPTS)
endif

CFLAGS=-Wconversion -fPIC -O$(OPTIMIZATION_LVL) -fcx-fortran-rules -fcx-limited-range -lquadmath -fext-numeric-literals -lmp++  $(EXTRA_ARGS)

CFLAGSf128=-Wconversion -fPIC -O$(OPTIMIZATION_LVL_f128) -fcx-fortran-rules -fcx-limited-range -fext-numeric-literals -lquadmath -lmp++ $(EXTRA_ARGS)

CFLAGSFMPR=-Wconversion -fPIC -O$(OPTIMIZATION_LVL_f128) -fcx-fortran-rules -fcx-limited-range -fext-numeric-literals -lquadmath -lmp++ $(EXTRA_ARGS)

include makefile_targets.inc

form_factors_f64.o: form_factors_f64.cpp 
	$(GPP) -c $(CFLAGS) $< -o $@ 

form_factors_f128.o: form_factors_f128.cpp 
	$(GPP) -c $(CFLAGSf128) $< -o $@ 

form_factors_mpfr.o: form_factors_mpfr.cpp 
	$(GPP) -c $(CFLAGSFMPR) $< -o $@ 

%_f64.o: %_f64.c
	$(GPP) -c $(CFLAGS) $< -o $@

%_f128.o: %_f128.c
	$(GPP) -c $(CFLAGSf128) $< -o $@

%_mpfr.o: %_mpfr.cpp
	$(GPP) -c $(CFLAGSFMPR) $< -o $@

clean:
	rm -f $(SGLIBNAMES) 

clean_all:
	rm *.o; rm -f $(SGLIBNAMES)